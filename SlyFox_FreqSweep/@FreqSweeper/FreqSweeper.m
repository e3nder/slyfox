classdef FreqSweeper
    %FREQSWEEPER Sweeps Frequency of FreqSynth and Plots Results
    %   Creates a nice user interface to watch a frequency sweep take place
    %   and edit its characteristics.
    
    properties
        myPanel = uiextras.Panel();
        myTopFigure = [];
        myFreqSynth = [];
    end
    
    methods
        function obj = FreqSweeper(top,f,freqSynth)
            obj.myTopFigure = top;
            obj.myPanel.Parent = f;
            obj.myFreqSynth = freqSynth;
            
            hsplit = uiextras.HBox(...
                'Parent', obj.myPanel, ...
                'Tag', 'hsplit', ...
                'Spacing', 5, ...
                'Padding', 5);
                
                uiVB = uiextras.VBox(...
                    'Parent', hsplit, ...
                    'Tag', 'uiVB', ...
                    'Spacing', 5, ...
                    'Padding', 5);
                
                    uiextras.Empty('Parent', uiVB);
                    startStopHB = uiextras.HBox(...
                        'Parent', uiVB, ...
                        'Spacing', 5, ...
                        'Padding', 5);
                        uicontrol(...
                            'Parent', startStopHB,...
                            'Style', 'pushbutton', ...
                            'Tag', 'startButton',...
                            'String', 'Start',...
                            'Callback', @obj.startFreqScan);
                        uicontrol(...
                            'Parent', startStopHB,...
                            'Style', 'pushbutton', ...
                            'Tag', 'stopButton',...
                            'String', 'Stop',...
                            'Callback', @obj.stopFreqScan);
                    freqParamHB = uiextras.HBox(...
                        'Parent', uiVB, ...
                        'Spacing', 5, ...
                        'Padding', 5);
                        startFreqVB = uiextras.VBox(...
                            'Parent', freqParamHB, ...
                            'Spacing', 5, ...
                            'Padding', 5);
                            uiextras.Empty('Parent', startFreqVB);
                            uicontrol(...
                                'Parent', startFreqVB, ...
                                'Style', 'text', ...
                                'String', 'Start Frequency', ...
                                'FontWeight', 'bold', ...
                                'FontUnits', 'normalized', ...
                                'FontSize', 0.3);
                            uicontrol(...
                                'Parent', startFreqVB, ...
                                'Style', 'edit', ...
                                'Tag', 'startFrequency', ...
                                'String', '24000000', ...
                                'FontWeight', 'normal', ...
                                'FontUnits', 'normalized', ...
                                'FontSize', 0.3); 
                            uiextras.Empty('Parent', startFreqVB);
                                
                        centerFreqVB = uiextras.VBox(...
                            'Parent', freqParamHB, ...
                            'Spacing', 5, ...
                            'Padding', 5);
                        stopFreqVB = uiextras.VBox(...
                            'Parent', freqParamHB, ...
                            'Spacing', 5, ...
                            'Padding', 5);
                    jProgBarPanel = uipanel(...
                        'Parent', uiVB, ...
                        'Tag', 'jProgBarPanel', ...
                        'BorderType', 'none', ...
                        'ResizeFcn', @obj.resizeJProgressBarHolder);
                    try
                        jProgBar = javaObjectEDT('javax.swing.JProgressBar');
                        jProgBar.setOrientation(jProgBar.HORIZONTAL);
                    catch
                       error('Cannot create Java-based scroll-bar!');
                    end
                    % Display the object onscreen
                    try
                      [jProgBar, hProgBar] = javacomponent(jProgBar);
                      set(hProgBar,'Parent', jProgBarPanel);
                      setappdata(obj.myTopFigure, 'jProgBar', jProgBar);
                      setappdata(obj.myTopFigure, 'hProgBar', hProgBar);
                    catch
                       error('Cannot display Java-base scroll-bar!');
                    end
                    savePathVB = uiextras.VBox(...
                        'Parent', uiVB, ...
                        'Spacing', 5, ...
                        'Padding', 5);
                    uiextras.Empty('Parent', uiVB);
                    set(uiVB, 'Sizes', [-1 -1 -1 -1 -1 -4]);
                    
                    
                
                scanPlotsVB = uiextras.VBox(...
                    'Parent', hsplit, ...
                    'Tag', 'scanPlotsVB', ...
                    'Spacing', 5, ...
                    'Padding', 5);
                    sNormAxes = axes(...
                        'Parent', scanPlotsVB,...
                        'Tag', 'sNormAxes');
                    sBGAxes = axes(...
                        'Parent', scanPlotsVB,...
                        'Tag', 'sBGAxes');
                    sEAxes = axes(...
                        'Parent', scanPlotsVB,...
                        'Tag', 'sEAxes');
                    sBGSAxes = axes(...
                        'Parent', scanPlotsVB,...
                        'Tag', 'sBGSAxes');
                    sBBGAxes = axes(...
                        'Parent', scanPlotsVB,...
                        'Tag', 'sBBGAxes');
                    sBEAxes = axes(...
                        'Parent', scanPlotsVB,...
                        'Tag', 'sBEAxes');
                
                rawPlotsVB = uiextras.VBox(...
                    'Parent', hsplit, ...
                    'Tag', 'scanPlotsVB', ...
                    'Spacing', 5, ...
                    'Padding', 5);
                    
                    rGSAxes = axes(...
                        'Parent', rawPlotsVB,...
                        'Tag', 'rGSAxes');
                    rBGAxes = axes(...
                        'Parent', rawPlotsVB,...
                        'Tag', 'rBGAxes');
                    rEAxes = axes(...
                        'Parent', rawPlotsVB,...
                        'Tag', 'rEAxes');
                    rBGSAxes = axes(...
                        'Parent', rawPlotsVB,...
                        'Tag', 'rGSAxes');
                    rBBGAxes = axes(...
                        'Parent', rawPlotsVB,...
                        'Tag', 'rBBGAxes');
                    rBEAxes = axes(...
                        'Parent', rawPlotsVB,...
                        'Tag', 'rBEAxes');
                set(hsplit, 'Sizes', [-1 -3 -1]);
                myHandles = guihandles(obj.myTopFigure);
                guidata(obj.myTopFigure, myHandles);
        end
        function resizeJProgressBarHolder(obj, src, eventData)
            myHandles = guidata(obj.myTopFigure);
            old_units = get(src,'Units');
            set(src,'Units','pixels');
            figpos = get(src,'Position');
            hProgBar = getappdata(obj.myTopFigure, 'hProgBar');
            set(hProgBar, 'Position', [floor(0.1*figpos(3)) floor(0.32*figpos(4)) floor(0.8*figpos(3)) floor(0.36*figpos(4))]);
            set(src,'Units',old_units);
        end
    end
    
end

